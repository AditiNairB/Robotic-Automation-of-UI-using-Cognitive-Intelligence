using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading;
using System.Runtime.InteropServices;
using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;


//using System.Drawing.Imaging;
using static System.Net.Mime.MediaTypeNames;
using System.Runtime.Remoting.Lifetime;

namespace MakeItWorkConsole
{
    class Program
    {
        [STAThread]
        static void Main(string[] args)
        {



            if (Environment.OSVersion.Version.Major >= 6) SetProcessDPIAware();


            Bitmap bmpScreenCapture = ScreenShot();



            bmpScreenCapture.Save(@"C:\\Users\\ADITI\\Documents\\Visual Studio 2017\\Projects\\dumb\\MakeItWorkOpenCVC++\\pleasework.bmp");

           // Process p2 = new Process();
           // p2 = Process.Start(@"C:\\Users\\ADITI\\Documents\\Visual Studio 2017\\Projects\\MakeItWorkOpenCVC++\\x64\\Debug\\MakeItWorkOpenCVC++.exe");


            return;



            Bitmap ScreenShot()
            {

                Process p1 = new Process();
                p1 = Process.Start(@"C:\Users\ADITI\Documents\Visual Studio 2017\Projects\LetThisUIWork\LetThisUIWork\bin\Debug\LetThisUIWork");

                
                Thread.Sleep(3000);

                Bitmap bmpScreenshot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height);

                Graphics g = Graphics.FromImage(bmpScreenshot);

                g.CopyFromScreen(Screen.PrimaryScreen.Bounds.X,
                         Screen.PrimaryScreen.Bounds.Y,
                         0, 0,
                         bmpScreenshot.Size,
                         CopyPixelOperation.SourceCopy);

                return bmpScreenshot;





                //Process.Start(@"C:\Users\ADITI\Documents\Visual Studio 2017\Projects\MakeItWorkOpenCVC++\x64\Debug\MakeItWorkOpenCVC++.exe");

            }

        }


        [System.Runtime.InteropServices.DllImport("user32.dll")]
        private static extern bool SetProcessDPIAware();

    }
}
